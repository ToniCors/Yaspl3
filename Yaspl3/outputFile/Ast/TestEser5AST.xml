<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE ProgramOP SYSTEM "roles.dtd">
<ProgramOP>
    <VarDecl_op>
        <type>int</type>
        <VaInit_op>
            <id>scelta</id>
            <int_const>1</int_const>
        </VaInit_op>
    </VarDecl_op>
    <VarDecl_op>
        <type>int</type>
        <VaInit_op>
            <id>sceltaOP</id>
            <int_const>1</int_const>
        </VaInit_op>
    </VarDecl_op>
    <VarDecl_op>
        <type>char</type>
        <VaInit_op>
            <id>operation</id>
            <char_const>a</char_const>
        </VaInit_op>
    </VarDecl_op>
    <VarDecl_op>
        <type>double</type>
        <VaInit_op>
            <id>input1</id>
        </VaInit_op>
    </VarDecl_op>
    <VarDecl_op>
        <type>double</type>
        <VaInit_op>
            <id>input2</id>
        </VaInit_op>
    </VarDecl_op>
    <VarDecl_op>
        <type>double</type>
        <VaInit_op>
            <id>result</id>
            <int_const>0</int_const>
        </VaInit_op>
    </VarDecl_op>
    <ProcDecel_op>
        <Id>addizione</Id>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>double</Type>
            <Id>input1</Id>
        </Par_op>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>double</Type>
            <Id>input2</Id>
        </Par_op>
        <Par_op>
            <ReturnType>out</ReturnType>
            <Type>double</Type>
            <Id>result</Id>
        </Par_op>
        <Body_op>
            <Assign_op>
                <id>result</id>
                <int_const>0</int_const>
            </Assign_op>
            <Assign_op>
                <id>result</id>
                <Add_op>
                    <Id>input1</Id>
                    <Id>input2</Id>
                </Add_op>
            </Assign_op>
        </Body_op>
    </ProcDecel_op>
    <ProcDecel_op>
        <Id>sottrazione</Id>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>double</Type>
            <Id>input1</Id>
        </Par_op>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>double</Type>
            <Id>input2</Id>
        </Par_op>
        <Par_op>
            <ReturnType>out</ReturnType>
            <Type>double</Type>
            <Id>result</Id>
        </Par_op>
        <Body_op>
            <Assign_op>
                <id>result</id>
                <int_const>0</int_const>
            </Assign_op>
            <Assign_op>
                <id>result</id>
                <Diff_op>
                    <Id>input1</Id>
                    <Id>input2</Id>
                </Diff_op>
            </Assign_op>
        </Body_op>
    </ProcDecel_op>
    <ProcDecel_op>
        <Id>moltiplicazione</Id>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>double</Type>
            <Id>input1</Id>
        </Par_op>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>double</Type>
            <Id>input2</Id>
        </Par_op>
        <Par_op>
            <ReturnType>out</ReturnType>
            <Type>double</Type>
            <Id>result</Id>
        </Par_op>
        <Body_op>
            <VarDecl_op>
                <type>int</type>
                <VaInit_op>
                    <id>i</id>
                    <int_const>1</int_const>
                </VaInit_op>
            </VarDecl_op>
            <Assign_op>
                <id>result</id>
                <int_const>0</int_const>
            </Assign_op>
            <WhileOP>
                <Le_op>
                    <Id>i</Id>
                    <Id>input2</Id>
                </Le_op>
                <CompStat_op>
                    <Assign_op>
                        <id>result</id>
                        <Add_op>
                            <Id>result</Id>
                            <Id>input1</Id>
                        </Add_op>
                    </Assign_op>
                    <Assign_op>
                        <id>i</id>
                        <Add_op>
                            <Id>i</Id>
                            <int_const>1</int_const>
                        </Add_op>
                    </Assign_op>
                </CompStat_op>
            </WhileOP>
        </Body_op>
    </ProcDecel_op>
    <ProcDecel_op>
        <Id>divisione</Id>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>double</Type>
            <Id>input1</Id>
        </Par_op>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>double</Type>
            <Id>input2</Id>
        </Par_op>
        <Par_op>
            <ReturnType>out</ReturnType>
            <Type>double</Type>
            <Id>result</Id>
        </Par_op>
        <Body_op>
            <Assign_op>
                <id>result</id>
                <int_const>0</int_const>
            </Assign_op>
            <IfThenElseOP>
                <Or_op>
                    <Lt_op>
                        <Id>input1</Id>
                        <int_const>0</int_const>
                    </Lt_op>
                    <Lt_op>
                        <Id>input2</Id>
                        <int_const>0</int_const>
                    </Lt_op>
                </Or_op>
                <CompStat_op>
                    <Write_op>
                        <string_const>"i numeri devono essere positivi"</string_const>
                    </Write_op>
                    <Assign_op>
                        <id>result</id>
                        <int_const>0</int_const>
                    </Assign_op>
                </CompStat_op>
                <CompStat_op>
                    <IfThenElseOP>
                        <Eq_op>
                            <Id>input2</Id>
                            <int_const>0</int_const>
                        </Eq_op>
                        <CompStat_op>
                            <Write_op>
                                <string_const>"impossibile dividere per 0"</string_const>
                            </Write_op>
                            <Assign_op>
                                <id>result</id>
                                <int_const>0</int_const>
                            </Assign_op>
                        </CompStat_op>
                        <CompStat_op>
                            <Assign_op>
                                <id>result</id>
                                <Div_op>
                                    <Id>input1</Id>
                                    <Id>input2</Id>
                                </Div_op>
                            </Assign_op>
                        </CompStat_op>
                    </IfThenElseOP>
                </CompStat_op>
            </IfThenElseOP>
        </Body_op>
    </ProcDecel_op>
    <ProcDecel_op>
        <Id>potenza</Id>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>double</Type>
            <Id>input1</Id>
        </Par_op>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>double</Type>
            <Id>input2</Id>
        </Par_op>
        <Par_op>
            <ReturnType>out</ReturnType>
            <Type>double</Type>
            <Id>result</Id>
        </Par_op>
        <Body_op>
            <VarDecl_op>
                <type>int</type>
                <VaInit_op>
                    <id>i</id>
                    <int_const>1</int_const>
                </VaInit_op>
            </VarDecl_op>
            <Assign_op>
                <id>result</id>
                <int_const>1</int_const>
            </Assign_op>
            <WhileOP>
                <Le_op>
                    <Id>i</Id>
                    <Id>input2</Id>
                </Le_op>
                <CompStat_op>
                    <Assign_op>
                        <id>result</id>
                        <Mul_op>
                            <Id>result</Id>
                            <Id>input1</Id>
                        </Mul_op>
                    </Assign_op>
                    <Assign_op>
                        <id>i</id>
                        <Add_op>
                            <Id>i</Id>
                            <int_const>1</int_const>
                        </Add_op>
                    </Assign_op>
                </CompStat_op>
            </WhileOP>
        </Body_op>
    </ProcDecel_op>
    <ProcDecel_op>
        <Id>fibonacci</Id>
        <Par_op>
            <ReturnType>in</ReturnType>
            <Type>int</Type>
            <Id>input1</Id>
        </Par_op>
        <Par_op>
            <ReturnType>out</ReturnType>
            <Type>double</Type>
            <Id>result</Id>
        </Par_op>
        <Body_op>
            <VarDecl_op>
                <type>int</type>
                <VaInit_op>
                    <id>temp</id>
                </VaInit_op>
            </VarDecl_op>
            <IfThenElseOP>
                <Lt_op>
                    <Id>input1</Id>
                    <int_const>0</int_const>
                </Lt_op>
                <CompStat_op>
                    <Assign_op>
                        <id>result</id>
                        <Uminus_op>
                            <int_const>1</int_const>
                        </Uminus_op>
                    </Assign_op>
                    <Write_op>
                        <string_const>"Impossibile calcolare fibonacci di un numero negativo"</string_const>
                    </Write_op>
                </CompStat_op>
                <CompStat_op>
                    <IfThenOP>
                        <Eq_op>
                            <Id>input1</Id>
                            <int_const>0</int_const>
                        </Eq_op>
                        <CompStat_op>
                            <Assign_op>
                                <id>result</id>
                                <int_const>0</int_const>
                            </Assign_op>
                        </CompStat_op>
                    </IfThenOP>
                    <IfThenOP>
                        <Eq_op>
                            <Id>input1</Id>
                            <int_const>1</int_const>
                        </Eq_op>
                        <CompStat_op>
                            <Assign_op>
                                <id>result</id>
                                <int_const>1</int_const>
                            </Assign_op>
                        </CompStat_op>
                    </IfThenOP>
                    <IfThenOP>
                        <Gt_op>
                            <Id>input1</Id>
                            <int_const>1</int_const>
                        </Gt_op>
                        <CompStat_op>
                            <Assign_op>
                                <id>input1</id>
                                <Diff_op>
                                    <Id>input1</Id>
                                    <int_const>1</int_const>
                                </Diff_op>
                            </Assign_op>
                            <Call_op>
                                <id>fibonacci</id>
                                <Id>input1</Id>
                                <Id>result</Id>
                            </Call_op>
                            <Assign_op>
                                <id>temp</id>
                                <Id>result</Id>
                            </Assign_op>
                            <Assign_op>
                                <id>input1</id>
                                <Diff_op>
                                    <Id>input1</Id>
                                    <int_const>1</int_const>
                                </Diff_op>
                            </Assign_op>
                            <Call_op>
                                <id>fibonacci</id>
                                <Id>input1</Id>
                                <Id>result</Id>
                            </Call_op>
                            <Assign_op>
                                <id>result</id>
                                <Add_op>
                                    <Id>temp</Id>
                                    <Id>result</Id>
                                </Add_op>
                            </Assign_op>
                        </CompStat_op>
                    </IfThenOP>
                </CompStat_op>
            </IfThenElseOP>
        </Body_op>
    </ProcDecel_op>
    <WhileOP>
        <Id>scelta</Id>
        <CompStat_op>
            <WhileOP>
                <Id>sceltaOP</Id>
                <CompStat_op>
                    <Write_op>
                        <string_const>"Digita + per la somma\n, - per la sottrazione\n, * per la moltiplicazione con somme\n, / per la divisione tra interi\n, ^ per l'elevazione a potenza\n, f per fibonacci"</string_const>
                    </Write_op>
                    <Read_op>
                        <Id>operation</Id>
                    </Read_op>
                    <IfThenElseOP>
                        <And_op>
                            <And_op>
                                <And_op>
                                    <And_op>
                                        <And_op>
                                            <Not_op>
                                                <Eq_op>
                                                    <Id>operation</Id>
                                                    <char_const>+</char_const>
                                                </Eq_op>
                                            </Not_op>
                                            <Not_op>
                                                <Eq_op>
                                                    <Id>operation</Id>
                                                    <char_const>-</char_const>
                                                </Eq_op>
                                            </Not_op>
                                        </And_op>
                                        <Not_op>
                                            <Eq_op>
                                                <Id>operation</Id>
                                                <char_const>*</char_const>
                                            </Eq_op>
                                        </Not_op>
                                    </And_op>
                                    <Not_op>
                                        <Eq_op>
                                            <Id>operation</Id>
                                            <char_const>^</char_const>
                                        </Eq_op>
                                    </Not_op>
                                </And_op>
                                <Not_op>
                                    <Eq_op>
                                        <Id>operation</Id>
                                        <char_const>f</char_const>
                                    </Eq_op>
                                </Not_op>
                            </And_op>
                            <Not_op>
                                <Eq_op>
                                    <Id>operation</Id>
                                    <char_const>/</char_const>
                                </Eq_op>
                            </Not_op>
                        </And_op>
                        <CompStat_op>
                            <Assign_op>
                                <id>sceltaOP</id>
                                <int_const>1</int_const>
                            </Assign_op>
                            <Write_op>
                                <string_const>"scelta errata riprova"</string_const>
                            </Write_op>
                        </CompStat_op>
                        <CompStat_op>
                            <Assign_op>
                                <id>sceltaOP</id>
                                <int_const>0</int_const>
                            </Assign_op>
                        </CompStat_op>
                    </IfThenElseOP>
                </CompStat_op>
            </WhileOP>
            <Write_op>
                <string_const>"Digita il primo valore"</string_const>
            </Write_op>
            <Read_op>
                <Id>input1</Id>
            </Read_op>
            <IfThenOP>
                <Not_op>
                    <Eq_op>
                        <Id>operation</Id>
                        <char_const>f</char_const>
                    </Eq_op>
                </Not_op>
                <CompStat_op>
                    <Write_op>
                        <string_const>"Digita il secondo valore"</string_const>
                    </Write_op>
                    <Read_op>
                        <Id>input2</Id>
                    </Read_op>
                </CompStat_op>
            </IfThenOP>
            <Write_op>
                <string_const>"Il risultato"</string_const>
            </Write_op>
            <IfThenOP>
                <Eq_op>
                    <Id>operation</Id>
                    <char_const>+</char_const>
                </Eq_op>
                <CompStat_op>
                    <Call_op>
                        <id>addizione</id>
                        <Id>input1</Id>
                        <Id>input2</Id>
                        <Id>result</Id>
                    </Call_op>
                    <Write_op>
                        <string_const>"dell addizione e':"</string_const>
                    </Write_op>
                </CompStat_op>
            </IfThenOP>
            <IfThenOP>
                <Eq_op>
                    <Id>operation</Id>
                    <char_const>-</char_const>
                </Eq_op>
                <CompStat_op>
                    <Call_op>
                        <id>sottrazione</id>
                        <Id>input1</Id>
                        <Id>input2</Id>
                        <Id>result</Id>
                    </Call_op>
                    <Write_op>
                        <string_const>"dell sottrazione e':"</string_const>
                    </Write_op>
                </CompStat_op>
            </IfThenOP>
            <IfThenOP>
                <Eq_op>
                    <Id>operation</Id>
                    <char_const>*</char_const>
                </Eq_op>
                <CompStat_op>
                    <Call_op>
                        <id>moltiplicazione</id>
                        <Id>input1</Id>
                        <Id>input2</Id>
                        <Id>result</Id>
                    </Call_op>
                    <Write_op>
                        <string_const>"dell moltiplicazione e':"</string_const>
                    </Write_op>
                </CompStat_op>
            </IfThenOP>
            <IfThenOP>
                <Eq_op>
                    <Id>operation</Id>
                    <char_const>/</char_const>
                </Eq_op>
                <CompStat_op>
                    <Call_op>
                        <id>divisione</id>
                        <Id>input1</Id>
                        <Id>input2</Id>
                        <Id>result</Id>
                    </Call_op>
                    <Write_op>
                        <string_const>"dell divisione e':"</string_const>
                    </Write_op>
                </CompStat_op>
            </IfThenOP>
            <IfThenOP>
                <Eq_op>
                    <Id>operation</Id>
                    <char_const>^</char_const>
                </Eq_op>
                <CompStat_op>
                    <Call_op>
                        <id>potenza</id>
                        <Id>input1</Id>
                        <Id>input2</Id>
                        <Id>result</Id>
                    </Call_op>
                    <Write_op>
                        <string_const>"dell potenza e':"</string_const>
                    </Write_op>
                </CompStat_op>
            </IfThenOP>
            <IfThenOP>
                <Eq_op>
                    <Id>operation</Id>
                    <char_const>f</char_const>
                </Eq_op>
                <CompStat_op>
                    <Call_op>
                        <id>fibonacci</id>
                        <Id>input1</Id>
                        <Id>result</Id>
                    </Call_op>
                    <Write_op>
                        <string_const>"di fibonacci e':"</string_const>
                    </Write_op>
                </CompStat_op>
            </IfThenOP>
            <Write_op>
                <Id>result</Id>
            </Write_op>
            <Assign_op>
                <id>sceltaOP</id>
                <int_const>1</int_const>
            </Assign_op>
            <Write_op>
                <string_const>"Digita un numero per continuare, 0 per uscire"</string_const>
            </Write_op>
            <Read_op>
                <Id>scelta</Id>
            </Read_op>
            <Assign_op>
                <id>result</id>
                <int_const>0</int_const>
            </Assign_op>
        </CompStat_op>
    </WhileOP>
</ProgramOP>
